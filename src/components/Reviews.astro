---
import ArrowRightIcon from "../assets/icons/Arrow-right.svg";
import ArrowLeftIcon from "../assets/icons/Arrow-left.svg";
---

<div class="flex flex-row items-center justify-center gap-4 lg:p-15">
  <div
    class="flex flex-col p-4 lg:border-2 lg:border-t-1 lg:border-l-1 border-gray-500 w-full max-w-4xl items-center justify-center"
  >
    <img
      id="review-image"
      src="./assets/reviews/card1.jpg"
      class="rounded-lg w-3xl"
      alt="Review 1"
    />
    <div
      class="flex flex-row border-t-2 border-gray-500 p-4 mt-4 w-full justify-between items-center"
    >
      <button
        id="arrow-left"
        type="button"
        aria-label="Previous review"
        class=""
      >
        <ArrowLeftIcon
          class="text-gray-400 hover:text-lime-400 transition-colors duration-200 size-8 lg:size-14"
        />
      </button>
      <div
        id="review-pagination"
        class="flex flex-row gap-2 justify-center w-full"
      >
      </div>
      <button id="arrow-right" type="button" aria-label="Next review">
        <ArrowRightIcon
          class="text-gray-400 hover:text-lime-400 transition-colors duration-200 size-8 lg:size-14"
        />
      </button>
    </div>
  </div>
</div>

<!-- We are doing a review carousel. This is a vanilla js implementation of it, if in the future we need more complex behaviour, we can do a react version. See Astro islands for more info: https://astro.build/en/core-concepts/astro-islands/ -->
<script>
  function initReviewCarousel() {
    const pagination = document.getElementById("review-pagination");
    const images = [
      "./assets/reviews/card1.jpg",
      "./assets/reviews/card2.jpg",
      "./assets/reviews/card3.jpg",
      "./assets/reviews/card4.jpg",
      "./assets/reviews/card5.jpg",
      "./assets/reviews/card6.jpg",
      // Add more image paths as needed
    ];

    if (!pagination) return;

    function renderPagination() {
      if (!pagination) return;
      pagination.innerHTML = "";
      images.forEach((_, i) => {
        const circle = document.createElement("span");
        circle.className =
          "inline-block size-2 lg:size-3 rounded-full transition-colors duration-200 " +
          (i === index ? "bg-lime-400" : "bg-gray-400");
        pagination.appendChild(circle);
      });
    }

    let index = 0;
    // Initial render
    renderPagination();

    const img = document.getElementById("review-image") as HTMLImageElement;
    const left = document.getElementById("arrow-left");
    const right = document.getElementById("arrow-right");

    left?.addEventListener("click", () => {
      index = index === 0 ? images.length - 1 : index - 1;
      if (img) {
        img.src = images[index];
        img.alt = `Review ${index + 1}`;
      }
      renderPagination();
    });

    right?.addEventListener("click", () => {
      index = index === images.length - 1 ? 0 : index + 1;
      if (img) {
        img.src = images[index];
        img.alt = `Review ${index + 1}`;
      }
      renderPagination();
    });
  }

  // Run on initial load
  document.addEventListener("DOMContentLoaded", initReviewCarousel);

  // Run on every page show (including back/forward navigation)
  document.addEventListener("astro:page-load", initReviewCarousel);

  // Fallback for immediate execution if DOM is already ready
  if (document.readyState !== "loading") {
    initReviewCarousel();
  }
</script>
